# Root logger option
log4j.rootLogger=INFO, stdout, fileAppender
 
# Direct log messages to stdout
log4j.appender.stdout=org.apache.log4j.ConsoleAppender
log4j.appender.stdout.Target=System.out
log4j.appender.stdout.layout=org.apache.log4j.PatternLayout
log4j.appender.stdout.layout.ConversionPattern=%d{yyyy-MM-dd HH:mm:ss} %-5p %c{1}:%L - %m%n

log4j.appender.fileAppender=org.apache.log4j.RollingFileAppender
log4j.appender.fileAppender.layout=org.apache.log4j.PatternLayout
log4j.appender.fileAppender.layout.ConversionPattern=%d{yyyy-MM-dd HH:mm:ss} %-5p %c{1}:%L - %m%n
#log4j.appender.fileAppender.File=${catalina.home}/logs/dllearner.log
log4j.appender.fileAppender.File=logs/dllearner.log

log4j.logger.com.ontos=DEBUG

# Eliminate most of the Spring Context Loading noise
log4j.logger.org.springframework=WARN

# DL-Learner Logs
log4j.logger.org.dllearner=INFO
# Turn this to Debug if you wish to dump stack traces to the appenders (console, file)
#log4j.logger.org.dllearner.cli=INFO
log4j.logger.org.dllearner.cli=DEBUG

# Dl-Learner debugging
#log4j.category.org.dllearner.kb.simple=DEBUG
#log4j.category.org.dllearner.reasoning.SPARQLReasoner=DEBUG
#log4j.category.org.dllearner.algorithms.celoe.CELOE=TRACE
#log4j.category.org.dllearner.refinementoperators.RhoDRDown=DEBUG

# Apache Jena
log4j.logger.org.apache.jena=WARN
log4j.logger.org.apache.jena.sparql.engine.iterator.QueryIteratorCheck=OFF


# to disable spring stack trace (do this for release)
log4j.logger.org.springframework.context.support.ClassPathXmlApplicationContext=ERROR

# hide useless owlapi warning "entityExpansionLimit not supported by parser"
log4j.logger.org.semanticweb.owlapi=WARN
log4j.logger.org.semanticweb.owlapi.util.SAXParsers=ERROR

